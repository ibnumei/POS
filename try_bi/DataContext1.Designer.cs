//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using LinqConnect template.
// Code is generated on: 09/08/2018 23:26:44
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using Devart.Data.Linq;
using Devart.Data.Linq.Mapping;
using System.Data;
using System.ComponentModel;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;
using System.Linq.Expressions;

namespace BiensiPosDbContext
{

    [DatabaseAttribute(Name = "biensi_pos_db")]
    [ProviderAttribute(typeof(Devart.Data.MySql.Linq.Provider.MySqlDataProvider))]
    public partial class BiensiPosDbDataContext : Devart.Data.Linq.DataContext
    {
        public static CompiledQueryCache compiledQueryCache = CompiledQueryCache.RegisterDataContext(typeof(BiensiPosDbDataContext));
        private static MappingSource mappingSource = new Devart.Data.Linq.Mapping.AttributeMappingSource();

        #region Extensibility Method Definitions
    
        partial void OnCreated();
        partial void OnSubmitError(Devart.Data.Linq.SubmitErrorEventArgs args);
        partial void InsertStore(Store instance);
        partial void UpdateStore(Store instance);
        partial void DeleteStore(Store instance);
        partial void InsertArticle(Article instance);
        partial void UpdateArticle(Article instance);
        partial void DeleteArticle(Article instance);
        partial void InsertTransaction(Transaction instance);
        partial void UpdateTransaction(Transaction instance);
        partial void DeleteTransaction(Transaction instance);
        partial void InsertTransactionLine(TransactionLine instance);
        partial void UpdateTransactionLine(TransactionLine instance);
        partial void DeleteTransactionLine(TransactionLine instance);

        #endregion

        public BiensiPosDbDataContext() :
        base(GetConnectionString("BiensiPosDbDataContextConnectionString"), mappingSource)
        {
            OnCreated();
        }

        public BiensiPosDbDataContext(MappingSource mappingSource) :
        base(GetConnectionString("BiensiPosDbDataContextConnectionString"), mappingSource)
        {
            OnCreated();
        }

        private static string GetConnectionString(string connectionStringName)
        {
            System.Configuration.ConnectionStringSettings connectionStringSettings = System.Configuration.ConfigurationManager.ConnectionStrings[connectionStringName];
            if (connectionStringSettings == null)
                throw new InvalidOperationException("Connection string \"" + connectionStringName +"\" could not be found in the configuration file.");
            return connectionStringSettings.ConnectionString;
        }

        public BiensiPosDbDataContext(string connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public BiensiPosDbDataContext(System.Data.IDbConnection connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public BiensiPosDbDataContext(string connection, MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public BiensiPosDbDataContext(System.Data.IDbConnection connection, MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public Devart.Data.Linq.Table<Customer> Customers
        {
            get
            {
                return this.GetTable<Customer>();
            }
        }

        public Devart.Data.Linq.Table<Discountitemselected> Discountitemselecteds
        {
            get
            {
                return this.GetTable<Discountitemselected>();
            }
        }

        public Devart.Data.Linq.Table<Discountretail> Discountretails
        {
            get
            {
                return this.GetTable<Discountretail>();
            }
        }

        public Devart.Data.Linq.Table<Discountretailline> Discountretaillines
        {
            get
            {
                return this.GetTable<Discountretailline>();
            }
        }

        public Devart.Data.Linq.Table<Itemdimensionbrand> Itemdimensionbrands
        {
            get
            {
                return this.GetTable<Itemdimensionbrand>();
            }
        }

        public Devart.Data.Linq.Table<Itemdimensioncolor> Itemdimensioncolors
        {
            get
            {
                return this.GetTable<Itemdimensioncolor>();
            }
        }

        public Devart.Data.Linq.Table<Itemdimensiondepartment> Itemdimensiondepartments
        {
            get
            {
                return this.GetTable<Itemdimensiondepartment>();
            }
        }

        public Devart.Data.Linq.Table<Itemdimensiondepartmenttype> Itemdimensiondepartmenttypes
        {
            get
            {
                return this.GetTable<Itemdimensiondepartmenttype>();
            }
        }

        public Devart.Data.Linq.Table<Itemdimensiongender> Itemdimensiongenders
        {
            get
            {
                return this.GetTable<Itemdimensiongender>();
            }
        }

        public Devart.Data.Linq.Table<Itemdimensionsize> Itemdimensionsizes
        {
            get
            {
                return this.GetTable<Itemdimensionsize>();
            }
        }

        public Devart.Data.Linq.Table<Discountstore> Discountstores
        {
            get
            {
                return this.GetTable<Discountstore>();
            }
        }

        public Devart.Data.Linq.Table<Store> Stores
        {
            get
            {
                return this.GetTable<Store>();
            }
        }

        public Devart.Data.Linq.Table<Article> Articles
        {
            get
            {
                return this.GetTable<Article>();
            }
        }

        public Devart.Data.Linq.Table<CustomerGroup> CustomerGroups
        {
            get
            {
                return this.GetTable<CustomerGroup>();
            }
        }

        public Devart.Data.Linq.Table<Employee> Employees
        {
            get
            {
                return this.GetTable<Employee>();
            }
        }

        public Devart.Data.Linq.Table<Transaction> Transactions
        {
            get
            {
                return this.GetTable<Transaction>();
            }
        }

        public Devart.Data.Linq.Table<TransactionLine> TransactionLines
        {
            get
            {
                return this.GetTable<TransactionLine>();
            }
        }
    }
}

namespace BiensiPosDbContext
{

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Customer in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.customer")]
    public partial class Customer
    {
        #pragma warning disable 0649

        private int _Id = 0;

        private string _CustId = @"-";

        private string _Name = @"-";

        private int _CustGroupId = 0;

        private string _Address = @"-";

        private string _Address2 = @"-";

        private string _Address3 = @"-";

        private string _Address4 = @"-";

        private string _Email = @"-";

        private string _PhoneNumber = @"-";

        private int _StoreId = 0;

        private string _DefaultCurr = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnCustIdChanging(string value);
        partial void OnCustIdChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnCustGroupIdChanging(int value);
        partial void OnCustGroupIdChanged();
        partial void OnAddressChanging(string value);
        partial void OnAddressChanged();
        partial void OnAddress2Changing(string value);
        partial void OnAddress2Changed();
        partial void OnAddress3Changing(string value);
        partial void OnAddress3Changed();
        partial void OnAddress4Changing(string value);
        partial void OnAddress4Changed();
        partial void OnEmailChanging(string value);
        partial void OnEmailChanged();
        partial void OnPhoneNumberChanging(string value);
        partial void OnPhoneNumberChanged();
        partial void OnStoreIdChanging(int value);
        partial void OnStoreIdChanged();
        partial void OnDefaultCurrChanging(string value);
        partial void OnDefaultCurrChanged();
        #endregion

        public Customer()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Storage = "_Id", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this._Id = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CustId in the schema.
        /// </summary>
        [Column(Storage = "_CustId", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CustId
        {
            get
            {
                return this._CustId;
            }
            set
            {
                if (this._CustId != value)
                {
                    this._CustId = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [Column(Storage = "_Name", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if (this._Name != value)
                {
                    this._Name = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CustGroupId in the schema.
        /// </summary>
        [Column(Storage = "_CustGroupId", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int CustGroupId
        {
            get
            {
                return this._CustGroupId;
            }
            set
            {
                if (this._CustGroupId != value)
                {
                    this._CustGroupId = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Address in the schema.
        /// </summary>
        [Column(Storage = "_Address", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Address
        {
            get
            {
                return this._Address;
            }
            set
            {
                if (this._Address != value)
                {
                    this._Address = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Address2 in the schema.
        /// </summary>
        [Column(Storage = "_Address2", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Address2
        {
            get
            {
                return this._Address2;
            }
            set
            {
                if (this._Address2 != value)
                {
                    this._Address2 = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Address3 in the schema.
        /// </summary>
        [Column(Storage = "_Address3", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Address3
        {
            get
            {
                return this._Address3;
            }
            set
            {
                if (this._Address3 != value)
                {
                    this._Address3 = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Address4 in the schema.
        /// </summary>
        [Column(Storage = "_Address4", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Address4
        {
            get
            {
                return this._Address4;
            }
            set
            {
                if (this._Address4 != value)
                {
                    this._Address4 = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Email in the schema.
        /// </summary>
        [Column(Storage = "_Email", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Email
        {
            get
            {
                return this._Email;
            }
            set
            {
                if (this._Email != value)
                {
                    this._Email = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PhoneNumber in the schema.
        /// </summary>
        [Column(Storage = "_PhoneNumber", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string PhoneNumber
        {
            get
            {
                return this._PhoneNumber;
            }
            set
            {
                if (this._PhoneNumber != value)
                {
                    this._PhoneNumber = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for StoreId in the schema.
        /// </summary>
        [Column(Storage = "_StoreId", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int StoreId
        {
            get
            {
                return this._StoreId;
            }
            set
            {
                if (this._StoreId != value)
                {
                    this._StoreId = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DefaultCurr in the schema.
        /// </summary>
        [Column(Storage = "_DefaultCurr", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DefaultCurr
        {
            get
            {
                return this._DefaultCurr;
            }
            set
            {
                if (this._DefaultCurr != value)
                {
                    this._DefaultCurr = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Discountitemselected in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.discountitemselected")]
    public partial class Discountitemselected
    {
        #pragma warning disable 0649

        private int _Id = 0;

        private int _ItemId = 0;

        private int _DiscountId = 0;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnItemIdChanging(int value);
        partial void OnItemIdChanged();
        partial void OnDiscountIdChanging(int value);
        partial void OnDiscountIdChanged();
        #endregion

        public Discountitemselected()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Storage = "_Id", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this._Id = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ItemId in the schema.
        /// </summary>
        [Column(Storage = "_ItemId", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int ItemId
        {
            get
            {
                return this._ItemId;
            }
            set
            {
                if (this._ItemId != value)
                {
                    this._ItemId = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DiscountId in the schema.
        /// </summary>
        [Column(Storage = "_DiscountId", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int DiscountId
        {
            get
            {
                return this._DiscountId;
            }
            set
            {
                if (this._DiscountId != value)
                {
                    this._DiscountId = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Discountretail in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.discountretail")]
    public partial class Discountretail
    {
        #pragma warning disable 0649

        private int _Id = 0;

        private int _DiscountCategory = 0;

        private string _DiscountCode = @"-";

        private string _DiscountName = @"-";

        private int _CustomerGroupId = 0;

        private string _DiscountPartner = @"-";

        private string _Description = @"-";

        private int _DiscountType = 0;

        private string _StartDate;

        private string _EndDate;

        private string _Status = @"-";

        private int _DiscountPercent = 0;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnDiscountCategoryChanging(int value);
        partial void OnDiscountCategoryChanged();
        partial void OnDiscountCodeChanging(string value);
        partial void OnDiscountCodeChanged();
        partial void OnDiscountNameChanging(string value);
        partial void OnDiscountNameChanged();
        partial void OnCustomerGroupIdChanging(int value);
        partial void OnCustomerGroupIdChanged();
        partial void OnDiscountPartnerChanging(string value);
        partial void OnDiscountPartnerChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        partial void OnDiscountTypeChanging(int value);
        partial void OnDiscountTypeChanged();
        partial void OnStartDateChanging(string value);
        partial void OnStartDateChanged();
        partial void OnEndDateChanging(string value);
        partial void OnEndDateChanged();
        partial void OnStatusChanging(string value);
        partial void OnStatusChanged();
        partial void OnDiscountPercentChanging(int value);
        partial void OnDiscountPercentChanged();
        #endregion

        public Discountretail()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Storage = "_Id", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this._Id = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DiscountCategory in the schema.
        /// </summary>
        [Column(Storage = "_DiscountCategory", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int DiscountCategory
        {
            get
            {
                return this._DiscountCategory;
            }
            set
            {
                if (this._DiscountCategory != value)
                {
                    this._DiscountCategory = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DiscountCode in the schema.
        /// </summary>
        [Column(Storage = "_DiscountCode", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DiscountCode
        {
            get
            {
                return this._DiscountCode;
            }
            set
            {
                if (this._DiscountCode != value)
                {
                    this._DiscountCode = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DiscountName in the schema.
        /// </summary>
        [Column(Storage = "_DiscountName", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DiscountName
        {
            get
            {
                return this._DiscountName;
            }
            set
            {
                if (this._DiscountName != value)
                {
                    this._DiscountName = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CustomerGroupId in the schema.
        /// </summary>
        [Column(Storage = "_CustomerGroupId", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int CustomerGroupId
        {
            get
            {
                return this._CustomerGroupId;
            }
            set
            {
                if (this._CustomerGroupId != value)
                {
                    this._CustomerGroupId = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DiscountPartner in the schema.
        /// </summary>
        [Column(Storage = "_DiscountPartner", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DiscountPartner
        {
            get
            {
                return this._DiscountPartner;
            }
            set
            {
                if (this._DiscountPartner != value)
                {
                    this._DiscountPartner = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [Column(Storage = "_Description", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if (this._Description != value)
                {
                    this._Description = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DiscountType in the schema.
        /// </summary>
        [Column(Storage = "_DiscountType", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int DiscountType
        {
            get
            {
                return this._DiscountType;
            }
            set
            {
                if (this._DiscountType != value)
                {
                    this._DiscountType = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for StartDate in the schema.
        /// </summary>
        [Column(Storage = "_StartDate", DbType = "VARCHAR(50) NULL", UpdateCheck = UpdateCheck.Never)]
        public string StartDate
        {
            get
            {
                return this._StartDate;
            }
            set
            {
                if (this._StartDate != value)
                {
                    this._StartDate = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EndDate in the schema.
        /// </summary>
        [Column(Storage = "_EndDate", DbType = "VARCHAR(50) NULL", UpdateCheck = UpdateCheck.Never)]
        public string EndDate
        {
            get
            {
                return this._EndDate;
            }
            set
            {
                if (this._EndDate != value)
                {
                    this._EndDate = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [Column(Storage = "_Status", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if (this._Status != value)
                {
                    this._Status = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DiscountPercent in the schema.
        /// </summary>
        [Column(Storage = "_DiscountPercent", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int DiscountPercent
        {
            get
            {
                return this._DiscountPercent;
            }
            set
            {
                if (this._DiscountPercent != value)
                {
                    this._DiscountPercent = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Discountretailline in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.discountretaillines")]
    public partial class Discountretailline
    {
        #pragma warning disable 0649

        private int _Id = 0;

        private int _BrandCode = 0;

        private int _Department = 0;

        private int _DepartmentType = 0;

        private int _Gender = 0;

        private int _ArticleId = 0;

        private int _Color = 0;

        private int _Size = 0;

        private int _DiscountRetailId = 0;

        private int _DiscountPrecentage = 0;

        private int _CashDiscount = 0;

        private int _DiscountPrice = 0;

        private int _Qty = 0;

        private int _AmountTransaction = 0;

        private int _ArticleIdDiscount = 0;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnBrandCodeChanging(int value);
        partial void OnBrandCodeChanged();
        partial void OnDepartmentChanging(int value);
        partial void OnDepartmentChanged();
        partial void OnDepartmentTypeChanging(int value);
        partial void OnDepartmentTypeChanged();
        partial void OnGenderChanging(int value);
        partial void OnGenderChanged();
        partial void OnArticleIdChanging(int value);
        partial void OnArticleIdChanged();
        partial void OnColorChanging(int value);
        partial void OnColorChanged();
        partial void OnSizeChanging(int value);
        partial void OnSizeChanged();
        partial void OnDiscountRetailIdChanging(int value);
        partial void OnDiscountRetailIdChanged();
        partial void OnDiscountPrecentageChanging(int value);
        partial void OnDiscountPrecentageChanged();
        partial void OnCashDiscountChanging(int value);
        partial void OnCashDiscountChanged();
        partial void OnDiscountPriceChanging(int value);
        partial void OnDiscountPriceChanged();
        partial void OnQtyChanging(int value);
        partial void OnQtyChanged();
        partial void OnAmountTransactionChanging(int value);
        partial void OnAmountTransactionChanged();
        partial void OnArticleIdDiscountChanging(int value);
        partial void OnArticleIdDiscountChanged();
        #endregion

        public Discountretailline()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Storage = "_Id", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this._Id = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for BrandCode in the schema.
        /// </summary>
        [Column(Storage = "_BrandCode", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int BrandCode
        {
            get
            {
                return this._BrandCode;
            }
            set
            {
                if (this._BrandCode != value)
                {
                    this._BrandCode = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Department in the schema.
        /// </summary>
        [Column(Storage = "_Department", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Department
        {
            get
            {
                return this._Department;
            }
            set
            {
                if (this._Department != value)
                {
                    this._Department = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DepartmentType in the schema.
        /// </summary>
        [Column(Storage = "_DepartmentType", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int DepartmentType
        {
            get
            {
                return this._DepartmentType;
            }
            set
            {
                if (this._DepartmentType != value)
                {
                    this._DepartmentType = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Gender in the schema.
        /// </summary>
        [Column(Storage = "_Gender", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Gender
        {
            get
            {
                return this._Gender;
            }
            set
            {
                if (this._Gender != value)
                {
                    this._Gender = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ArticleId in the schema.
        /// </summary>
        [Column(Storage = "_ArticleId", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int ArticleId
        {
            get
            {
                return this._ArticleId;
            }
            set
            {
                if (this._ArticleId != value)
                {
                    this._ArticleId = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Color in the schema.
        /// </summary>
        [Column(Storage = "_Color", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Color
        {
            get
            {
                return this._Color;
            }
            set
            {
                if (this._Color != value)
                {
                    this._Color = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Size in the schema.
        /// </summary>
        [Column(Storage = "_Size", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Size
        {
            get
            {
                return this._Size;
            }
            set
            {
                if (this._Size != value)
                {
                    this._Size = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DiscountRetailId in the schema.
        /// </summary>
        [Column(Storage = "_DiscountRetailId", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int DiscountRetailId
        {
            get
            {
                return this._DiscountRetailId;
            }
            set
            {
                if (this._DiscountRetailId != value)
                {
                    this._DiscountRetailId = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DiscountPrecentage in the schema.
        /// </summary>
        [Column(Storage = "_DiscountPrecentage", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int DiscountPrecentage
        {
            get
            {
                return this._DiscountPrecentage;
            }
            set
            {
                if (this._DiscountPrecentage != value)
                {
                    this._DiscountPrecentage = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CashDiscount in the schema.
        /// </summary>
        [Column(Storage = "_CashDiscount", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int CashDiscount
        {
            get
            {
                return this._CashDiscount;
            }
            set
            {
                if (this._CashDiscount != value)
                {
                    this._CashDiscount = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DiscountPrice in the schema.
        /// </summary>
        [Column(Storage = "_DiscountPrice", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int DiscountPrice
        {
            get
            {
                return this._DiscountPrice;
            }
            set
            {
                if (this._DiscountPrice != value)
                {
                    this._DiscountPrice = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Qty in the schema.
        /// </summary>
        [Column(Storage = "_Qty", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Qty
        {
            get
            {
                return this._Qty;
            }
            set
            {
                if (this._Qty != value)
                {
                    this._Qty = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for AmountTransaction in the schema.
        /// </summary>
        [Column(Storage = "_AmountTransaction", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int AmountTransaction
        {
            get
            {
                return this._AmountTransaction;
            }
            set
            {
                if (this._AmountTransaction != value)
                {
                    this._AmountTransaction = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ArticleIdDiscount in the schema.
        /// </summary>
        [Column(Storage = "_ArticleIdDiscount", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int ArticleIdDiscount
        {
            get
            {
                return this._ArticleIdDiscount;
            }
            set
            {
                if (this._ArticleIdDiscount != value)
                {
                    this._ArticleIdDiscount = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Itemdimensionbrand in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.itemdimensionbrand")]
    public partial class Itemdimensionbrand
    {
        #pragma warning disable 0649

        private int _Id = 0;

        private string _Code = @"-";

        private string _Description = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnCodeChanging(string value);
        partial void OnCodeChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        #endregion

        public Itemdimensionbrand()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Storage = "_Id", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this._Id = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [Column(Storage = "_Code", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Code
        {
            get
            {
                return this._Code;
            }
            set
            {
                if (this._Code != value)
                {
                    this._Code = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [Column(Storage = "_Description", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if (this._Description != value)
                {
                    this._Description = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Itemdimensioncolor in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.itemdimensioncolor")]
    public partial class Itemdimensioncolor
    {
        #pragma warning disable 0649

        private int _Id = 0;

        private string _Code = @"-";

        private string _Description = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnCodeChanging(string value);
        partial void OnCodeChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        #endregion

        public Itemdimensioncolor()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Storage = "_Id", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this._Id = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [Column(Storage = "_Code", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Code
        {
            get
            {
                return this._Code;
            }
            set
            {
                if (this._Code != value)
                {
                    this._Code = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [Column(Storage = "_Description", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if (this._Description != value)
                {
                    this._Description = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Itemdimensiondepartment in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.itemdimensiondepartment")]
    public partial class Itemdimensiondepartment
    {
        #pragma warning disable 0649

        private int _Id = 0;

        private string _Code = @"-";

        private string _Description = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnCodeChanging(string value);
        partial void OnCodeChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        #endregion

        public Itemdimensiondepartment()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Storage = "_Id", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this._Id = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [Column(Storage = "_Code", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Code
        {
            get
            {
                return this._Code;
            }
            set
            {
                if (this._Code != value)
                {
                    this._Code = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [Column(Storage = "_Description", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if (this._Description != value)
                {
                    this._Description = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Itemdimensiondepartmenttype in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.itemdimensiondepartmenttype")]
    public partial class Itemdimensiondepartmenttype
    {
        #pragma warning disable 0649

        private int _Id = 0;

        private string _Code = @"-";

        private string _Description = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnCodeChanging(string value);
        partial void OnCodeChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        #endregion

        public Itemdimensiondepartmenttype()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Storage = "_Id", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this._Id = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [Column(Storage = "_Code", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Code
        {
            get
            {
                return this._Code;
            }
            set
            {
                if (this._Code != value)
                {
                    this._Code = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [Column(Storage = "_Description", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if (this._Description != value)
                {
                    this._Description = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Itemdimensiongender in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.itemdimensiongender")]
    public partial class Itemdimensiongender
    {
        #pragma warning disable 0649

        private int _Id = 0;

        private string _Code = @"-";

        private string _Description = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnCodeChanging(string value);
        partial void OnCodeChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        #endregion

        public Itemdimensiongender()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Storage = "_Id", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this._Id = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [Column(Storage = "_Code", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Code
        {
            get
            {
                return this._Code;
            }
            set
            {
                if (this._Code != value)
                {
                    this._Code = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [Column(Storage = "_Description", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if (this._Description != value)
                {
                    this._Description = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Itemdimensionsize in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.itemdimensionsize")]
    public partial class Itemdimensionsize
    {
        #pragma warning disable 0649

        private int _Id = 0;

        private string _Code = @"-";

        private string _Description = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnCodeChanging(string value);
        partial void OnCodeChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        #endregion

        public Itemdimensionsize()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Storage = "_Id", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this._Id = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [Column(Storage = "_Code", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Code
        {
            get
            {
                return this._Code;
            }
            set
            {
                if (this._Code != value)
                {
                    this._Code = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [Column(Storage = "_Description", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if (this._Description != value)
                {
                    this._Description = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Discountstore in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.discountstore")]
    public partial class Discountstore
    {
        #pragma warning disable 0649

        private int _Id = 0;

        private int _StoreId = 0;

        private int _DiscountId = 0;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnStoreIdChanging(int value);
        partial void OnStoreIdChanged();
        partial void OnDiscountIdChanging(int value);
        partial void OnDiscountIdChanged();
        #endregion

        public Discountstore()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Storage = "_Id", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this._Id = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for StoreId in the schema.
        /// </summary>
        [Column(Storage = "_StoreId", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int StoreId
        {
            get
            {
                return this._StoreId;
            }
            set
            {
                if (this._StoreId != value)
                {
                    this._StoreId = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DiscountId in the schema.
        /// </summary>
        [Column(Storage = "_DiscountId", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int DiscountId
        {
            get
            {
                return this._DiscountId;
            }
            set
            {
                if (this._DiscountId != value)
                {
                    this._DiscountId = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Store in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.store")]
    public partial class Store : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private long _Id = 0;

        private string _CODE = @"-";

        private string _NAME = @"-";

        private string _LOCATION = @"-";

        private string _ADDRESS = @"-";

        private string _CITY = @"-";

        private string _REGIONAL = @"-";

        private int _STORETYPEID = 0;

        private string _ADDRESS2 = @"-";

        private string _ADDRESS3 = @"-";

        private string _ADDRESS4 = @"-";

        private string _WAREHOUSEID = @"-";

        private string _CUSTIDSTORE = @"-";

        private double _BUDGETTOSTORE = 0;

        private double _BUDGETTOCASHIER = 0;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnCODEChanging(string value);
        partial void OnCODEChanged();
        partial void OnNAMEChanging(string value);
        partial void OnNAMEChanged();
        partial void OnLOCATIONChanging(string value);
        partial void OnLOCATIONChanged();
        partial void OnADDRESSChanging(string value);
        partial void OnADDRESSChanged();
        partial void OnCITYChanging(string value);
        partial void OnCITYChanged();
        partial void OnREGIONALChanging(string value);
        partial void OnREGIONALChanged();
        partial void OnSTORETYPEIDChanging(int value);
        partial void OnSTORETYPEIDChanged();
        partial void OnADDRESS2Changing(string value);
        partial void OnADDRESS2Changed();
        partial void OnADDRESS3Changing(string value);
        partial void OnADDRESS3Changed();
        partial void OnADDRESS4Changing(string value);
        partial void OnADDRESS4Changed();
        partial void OnWAREHOUSEIDChanging(string value);
        partial void OnWAREHOUSEIDChanged();
        partial void OnCUSTIDSTOREChanging(string value);
        partial void OnCUSTIDSTOREChanged();
        partial void OnBUDGETTOSTOREChanging(double value);
        partial void OnBUDGETTOSTOREChanged();
        partial void OnBUDGETTOCASHIERChanging(double value);
        partial void OnBUDGETTOCASHIERChanged();
        #endregion

        public Store()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", CanBeNull = false, DbType = "BIGINT(20) NOT NULL", IsPrimaryKey = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CODE in the schema.
        /// </summary>
        [Column(Storage = "_CODE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CODE
        {
            get
            {
                return this._CODE;
            }
            set
            {
                if (this._CODE != value)
                {
                    this.OnCODEChanging(value);
                    this.SendPropertyChanging("CODE");
                    this._CODE = value;
                    this.SendPropertyChanged("CODE");
                    this.OnCODEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NAME in the schema.
        /// </summary>
        [Column(Storage = "_NAME", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NAME
        {
            get
            {
                return this._NAME;
            }
            set
            {
                if (this._NAME != value)
                {
                    this.OnNAMEChanging(value);
                    this.SendPropertyChanging("NAME");
                    this._NAME = value;
                    this.SendPropertyChanged("NAME");
                    this.OnNAMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for LOCATION in the schema.
        /// </summary>
        [Column(Storage = "_LOCATION", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string LOCATION
        {
            get
            {
                return this._LOCATION;
            }
            set
            {
                if (this._LOCATION != value)
                {
                    this.OnLOCATIONChanging(value);
                    this.SendPropertyChanging("LOCATION");
                    this._LOCATION = value;
                    this.SendPropertyChanged("LOCATION");
                    this.OnLOCATIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ADDRESS in the schema.
        /// </summary>
        [Column(Storage = "_ADDRESS", CanBeNull = false, DbType = "VARCHAR(300) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ADDRESS
        {
            get
            {
                return this._ADDRESS;
            }
            set
            {
                if (this._ADDRESS != value)
                {
                    this.OnADDRESSChanging(value);
                    this.SendPropertyChanging("ADDRESS");
                    this._ADDRESS = value;
                    this.SendPropertyChanged("ADDRESS");
                    this.OnADDRESSChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CITY in the schema.
        /// </summary>
        [Column(Storage = "_CITY", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CITY
        {
            get
            {
                return this._CITY;
            }
            set
            {
                if (this._CITY != value)
                {
                    this.OnCITYChanging(value);
                    this.SendPropertyChanging("CITY");
                    this._CITY = value;
                    this.SendPropertyChanged("CITY");
                    this.OnCITYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for REGIONAL in the schema.
        /// </summary>
        [Column(Storage = "_REGIONAL", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string REGIONAL
        {
            get
            {
                return this._REGIONAL;
            }
            set
            {
                if (this._REGIONAL != value)
                {
                    this.OnREGIONALChanging(value);
                    this.SendPropertyChanging("REGIONAL");
                    this._REGIONAL = value;
                    this.SendPropertyChanged("REGIONAL");
                    this.OnREGIONALChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STORETYPEID in the schema.
        /// </summary>
        [Column(Name = @"STORE_TYPE_ID", Storage = "_STORETYPEID", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int STORETYPEID
        {
            get
            {
                return this._STORETYPEID;
            }
            set
            {
                if (this._STORETYPEID != value)
                {
                    this.OnSTORETYPEIDChanging(value);
                    this.SendPropertyChanging("STORETYPEID");
                    this._STORETYPEID = value;
                    this.SendPropertyChanged("STORETYPEID");
                    this.OnSTORETYPEIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ADDRESS2 in the schema.
        /// </summary>
        [Column(Storage = "_ADDRESS2", CanBeNull = false, DbType = "VARCHAR(300) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ADDRESS2
        {
            get
            {
                return this._ADDRESS2;
            }
            set
            {
                if (this._ADDRESS2 != value)
                {
                    this.OnADDRESS2Changing(value);
                    this.SendPropertyChanging("ADDRESS2");
                    this._ADDRESS2 = value;
                    this.SendPropertyChanged("ADDRESS2");
                    this.OnADDRESS2Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ADDRESS3 in the schema.
        /// </summary>
        [Column(Storage = "_ADDRESS3", CanBeNull = false, DbType = "VARCHAR(300) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ADDRESS3
        {
            get
            {
                return this._ADDRESS3;
            }
            set
            {
                if (this._ADDRESS3 != value)
                {
                    this.OnADDRESS3Changing(value);
                    this.SendPropertyChanging("ADDRESS3");
                    this._ADDRESS3 = value;
                    this.SendPropertyChanged("ADDRESS3");
                    this.OnADDRESS3Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ADDRESS4 in the schema.
        /// </summary>
        [Column(Storage = "_ADDRESS4", CanBeNull = false, DbType = "VARCHAR(300) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ADDRESS4
        {
            get
            {
                return this._ADDRESS4;
            }
            set
            {
                if (this._ADDRESS4 != value)
                {
                    this.OnADDRESS4Changing(value);
                    this.SendPropertyChanging("ADDRESS4");
                    this._ADDRESS4 = value;
                    this.SendPropertyChanged("ADDRESS4");
                    this.OnADDRESS4Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for WAREHOUSEID in the schema.
        /// </summary>
        [Column(Name = @"WAREHOUSE_ID", Storage = "_WAREHOUSEID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string WAREHOUSEID
        {
            get
            {
                return this._WAREHOUSEID;
            }
            set
            {
                if (this._WAREHOUSEID != value)
                {
                    this.OnWAREHOUSEIDChanging(value);
                    this.SendPropertyChanging("WAREHOUSEID");
                    this._WAREHOUSEID = value;
                    this.SendPropertyChanged("WAREHOUSEID");
                    this.OnWAREHOUSEIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CUSTIDSTORE in the schema.
        /// </summary>
        [Column(Name = @"CUST_ID_STORE", Storage = "_CUSTIDSTORE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CUSTIDSTORE
        {
            get
            {
                return this._CUSTIDSTORE;
            }
            set
            {
                if (this._CUSTIDSTORE != value)
                {
                    this.OnCUSTIDSTOREChanging(value);
                    this.SendPropertyChanging("CUSTIDSTORE");
                    this._CUSTIDSTORE = value;
                    this.SendPropertyChanged("CUSTIDSTORE");
                    this.OnCUSTIDSTOREChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for BUDGETTOSTORE in the schema.
        /// </summary>
        [Column(Name = @"BUDGET_TO_STORE", Storage = "_BUDGETTOSTORE", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double BUDGETTOSTORE
        {
            get
            {
                return this._BUDGETTOSTORE;
            }
            set
            {
                if (this._BUDGETTOSTORE != value)
                {
                    this.OnBUDGETTOSTOREChanging(value);
                    this.SendPropertyChanging("BUDGETTOSTORE");
                    this._BUDGETTOSTORE = value;
                    this.SendPropertyChanged("BUDGETTOSTORE");
                    this.OnBUDGETTOSTOREChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for BUDGETTOCASHIER in the schema.
        /// </summary>
        [Column(Name = @"BUDGET_TO_CASHIER", Storage = "_BUDGETTOCASHIER", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double BUDGETTOCASHIER
        {
            get
            {
                return this._BUDGETTOCASHIER;
            }
            set
            {
                if (this._BUDGETTOCASHIER != value)
                {
                    this.OnBUDGETTOCASHIERChanging(value);
                    this.SendPropertyChanging("BUDGETTOCASHIER");
                    this._BUDGETTOCASHIER = value;
                    this.SendPropertyChanged("BUDGETTOCASHIER");
                    this.OnBUDGETTOCASHIERChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Article in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.article")]
    public partial class Article : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private long _Id = 0;

        private string _ARTICLEID = @"-";

        private string _ARTICLENAME = @"-";

        private string _BRAND = @"-";

        private string _GENDER = @"-";

        private string _DEPARTMENT = @"-";

        private string _DEPARTMENTTYPE = @"-";

        private string _SIZE = @"-";

        private string _COLOR = @"-";

        private string _UNIT = @"-";

        private double _PRICE = 0;

        private string _ARTICLEIDALIAS = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnARTICLEIDChanging(string value);
        partial void OnARTICLEIDChanged();
        partial void OnARTICLENAMEChanging(string value);
        partial void OnARTICLENAMEChanged();
        partial void OnBRANDChanging(string value);
        partial void OnBRANDChanged();
        partial void OnGENDERChanging(string value);
        partial void OnGENDERChanged();
        partial void OnDEPARTMENTChanging(string value);
        partial void OnDEPARTMENTChanged();
        partial void OnDEPARTMENTTYPEChanging(string value);
        partial void OnDEPARTMENTTYPEChanged();
        partial void OnSIZEChanging(string value);
        partial void OnSIZEChanged();
        partial void OnCOLORChanging(string value);
        partial void OnCOLORChanged();
        partial void OnUNITChanging(string value);
        partial void OnUNITChanged();
        partial void OnPRICEChanging(double value);
        partial void OnPRICEChanged();
        partial void OnARTICLEIDALIASChanging(string value);
        partial void OnARTICLEIDALIASChanged();
        #endregion

        public Article()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", CanBeNull = false, DbType = "BIGINT(20) NOT NULL", IsPrimaryKey = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ARTICLEID in the schema.
        /// </summary>
        [Column(Name = @"ARTICLE_ID", Storage = "_ARTICLEID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ARTICLEID
        {
            get
            {
                return this._ARTICLEID;
            }
            set
            {
                if (this._ARTICLEID != value)
                {
                    this.OnARTICLEIDChanging(value);
                    this.SendPropertyChanging("ARTICLEID");
                    this._ARTICLEID = value;
                    this.SendPropertyChanged("ARTICLEID");
                    this.OnARTICLEIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ARTICLENAME in the schema.
        /// </summary>
        [Column(Name = @"ARTICLE_NAME", Storage = "_ARTICLENAME", CanBeNull = false, DbType = "VARCHAR(300) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ARTICLENAME
        {
            get
            {
                return this._ARTICLENAME;
            }
            set
            {
                if (this._ARTICLENAME != value)
                {
                    this.OnARTICLENAMEChanging(value);
                    this.SendPropertyChanging("ARTICLENAME");
                    this._ARTICLENAME = value;
                    this.SendPropertyChanged("ARTICLENAME");
                    this.OnARTICLENAMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for BRAND in the schema.
        /// </summary>
        [Column(Storage = "_BRAND", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string BRAND
        {
            get
            {
                return this._BRAND;
            }
            set
            {
                if (this._BRAND != value)
                {
                    this.OnBRANDChanging(value);
                    this.SendPropertyChanging("BRAND");
                    this._BRAND = value;
                    this.SendPropertyChanged("BRAND");
                    this.OnBRANDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for GENDER in the schema.
        /// </summary>
        [Column(Storage = "_GENDER", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string GENDER
        {
            get
            {
                return this._GENDER;
            }
            set
            {
                if (this._GENDER != value)
                {
                    this.OnGENDERChanging(value);
                    this.SendPropertyChanging("GENDER");
                    this._GENDER = value;
                    this.SendPropertyChanged("GENDER");
                    this.OnGENDERChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DEPARTMENT in the schema.
        /// </summary>
        [Column(Storage = "_DEPARTMENT", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DEPARTMENT
        {
            get
            {
                return this._DEPARTMENT;
            }
            set
            {
                if (this._DEPARTMENT != value)
                {
                    this.OnDEPARTMENTChanging(value);
                    this.SendPropertyChanging("DEPARTMENT");
                    this._DEPARTMENT = value;
                    this.SendPropertyChanged("DEPARTMENT");
                    this.OnDEPARTMENTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DEPARTMENTTYPE in the schema.
        /// </summary>
        [Column(Name = @"DEPARTMENT_TYPE", Storage = "_DEPARTMENTTYPE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DEPARTMENTTYPE
        {
            get
            {
                return this._DEPARTMENTTYPE;
            }
            set
            {
                if (this._DEPARTMENTTYPE != value)
                {
                    this.OnDEPARTMENTTYPEChanging(value);
                    this.SendPropertyChanging("DEPARTMENTTYPE");
                    this._DEPARTMENTTYPE = value;
                    this.SendPropertyChanged("DEPARTMENTTYPE");
                    this.OnDEPARTMENTTYPEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SIZE in the schema.
        /// </summary>
        [Column(Storage = "_SIZE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string SIZE
        {
            get
            {
                return this._SIZE;
            }
            set
            {
                if (this._SIZE != value)
                {
                    this.OnSIZEChanging(value);
                    this.SendPropertyChanging("SIZE");
                    this._SIZE = value;
                    this.SendPropertyChanged("SIZE");
                    this.OnSIZEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for COLOR in the schema.
        /// </summary>
        [Column(Storage = "_COLOR", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string COLOR
        {
            get
            {
                return this._COLOR;
            }
            set
            {
                if (this._COLOR != value)
                {
                    this.OnCOLORChanging(value);
                    this.SendPropertyChanging("COLOR");
                    this._COLOR = value;
                    this.SendPropertyChanged("COLOR");
                    this.OnCOLORChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UNIT in the schema.
        /// </summary>
        [Column(Storage = "_UNIT", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string UNIT
        {
            get
            {
                return this._UNIT;
            }
            set
            {
                if (this._UNIT != value)
                {
                    this.OnUNITChanging(value);
                    this.SendPropertyChanging("UNIT");
                    this._UNIT = value;
                    this.SendPropertyChanged("UNIT");
                    this.OnUNITChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PRICE in the schema.
        /// </summary>
        [Column(Storage = "_PRICE", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double PRICE
        {
            get
            {
                return this._PRICE;
            }
            set
            {
                if (this._PRICE != value)
                {
                    this.OnPRICEChanging(value);
                    this.SendPropertyChanging("PRICE");
                    this._PRICE = value;
                    this.SendPropertyChanged("PRICE");
                    this.OnPRICEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ARTICLEIDALIAS in the schema.
        /// </summary>
        [Column(Name = @"ARTICLE_ID_ALIAS", Storage = "_ARTICLEIDALIAS", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ARTICLEIDALIAS
        {
            get
            {
                return this._ARTICLEIDALIAS;
            }
            set
            {
                if (this._ARTICLEIDALIAS != value)
                {
                    this.OnARTICLEIDALIASChanging(value);
                    this.SendPropertyChanging("ARTICLEIDALIAS");
                    this._ARTICLEIDALIAS = value;
                    this.SendPropertyChanged("ARTICLEIDALIAS");
                    this.OnARTICLEIDALIASChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.CustomerGroup in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.customer_group")]
    public partial class CustomerGroup
    {
        #pragma warning disable 0649

        private long _Id = 0;

        private string _CODE = @"-";

        private string _DESCRIPTION = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnCODEChanging(string value);
        partial void OnCODEChanged();
        partial void OnDESCRIPTIONChanging(string value);
        partial void OnDESCRIPTIONChanged();
        #endregion

        public CustomerGroup()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", CanBeNull = false, DbType = "BIGINT(20) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this._Id = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CODE in the schema.
        /// </summary>
        [Column(Storage = "_CODE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CODE
        {
            get
            {
                return this._CODE;
            }
            set
            {
                if (this._CODE != value)
                {
                    this._CODE = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DESCRIPTION in the schema.
        /// </summary>
        [Column(Storage = "_DESCRIPTION", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DESCRIPTION
        {
            get
            {
                return this._DESCRIPTION;
            }
            set
            {
                if (this._DESCRIPTION != value)
                {
                    this._DESCRIPTION = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Employee in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.employee")]
    public partial class Employee
    {
        #pragma warning disable 0649

        private long _Id = 0;

        private string _EMPLOYEEID = @"-";

        private string _NAME = @"-";

        private long _POSITIONID = 0;

        private string _Pass;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnEMPLOYEEIDChanging(string value);
        partial void OnEMPLOYEEIDChanged();
        partial void OnNAMEChanging(string value);
        partial void OnNAMEChanged();
        partial void OnPOSITIONIDChanging(long value);
        partial void OnPOSITIONIDChanged();
        partial void OnPassChanging(string value);
        partial void OnPassChanged();
        #endregion

        public Employee()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", CanBeNull = false, DbType = "BIGINT(20) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this._Id = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EMPLOYEEID in the schema.
        /// </summary>
        [Column(Name = @"EMPLOYEE_ID", Storage = "_EMPLOYEEID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string EMPLOYEEID
        {
            get
            {
                return this._EMPLOYEEID;
            }
            set
            {
                if (this._EMPLOYEEID != value)
                {
                    this._EMPLOYEEID = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NAME in the schema.
        /// </summary>
        [Column(Storage = "_NAME", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NAME
        {
            get
            {
                return this._NAME;
            }
            set
            {
                if (this._NAME != value)
                {
                    this._NAME = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for POSITIONID in the schema.
        /// </summary>
        [Column(Name = @"POSITION_ID", Storage = "_POSITIONID", CanBeNull = false, DbType = "BIGINT(20) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public long POSITIONID
        {
            get
            {
                return this._POSITIONID;
            }
            set
            {
                if (this._POSITIONID != value)
                {
                    this._POSITIONID = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Pass in the schema.
        /// </summary>
        [Column(Storage = "_Pass", DbType = "TEXT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Pass
        {
            get
            {
                return this._Pass;
            }
            set
            {
                if (this._Pass != value)
                {
                    this._Pass = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Transaction in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.transaction")]
    public partial class Transaction : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private long _Id;

        private string _TRANSACTIONID = @"-";

        private string _STORECODE = @"-";

        private string _CUSTOMERID = @"-";

        private string _EMPLOYEEID = @"-";

        private string _RECEIPTID = @"-";

        private string _SPGID = @"-";

        private double _DISCOUNT = 0;

        private double _TOTAL = 0;

        private int _STATUS = 0;

        private int _PAYMENTTYPE = 0;

        private double _CASH = 0;

        private double _EDC = 0;

        private double _EDC2 = 0;

        private double _CHANGEE = 0;

        private double _VOUCHER = 0;

        private string _BANKNAME = @"-";

        private string _BANKNAME2 = @"-";

        private string _NOREF = @"-";

        private string _NOREF2 = @"-";

        private string _DATE = @"-";

        private string _TIME = @"-";

        private System.DateTime _TIMESTAMP = DateTime.Now;

        private int _STATUSAPI = 0;

        private string _CUSTIDSTORE = @"-";

        private string _CURRENCY = @"-";

        private string _IDSHIFT = @"-";

        private string _IDCSTORE = @"-";

        private int _VOUCHERID = 0;

        private string _VOUCHERCODE = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnTRANSACTIONIDChanging(string value);
        partial void OnTRANSACTIONIDChanged();
        partial void OnSTORECODEChanging(string value);
        partial void OnSTORECODEChanged();
        partial void OnCUSTOMERIDChanging(string value);
        partial void OnCUSTOMERIDChanged();
        partial void OnEMPLOYEEIDChanging(string value);
        partial void OnEMPLOYEEIDChanged();
        partial void OnRECEIPTIDChanging(string value);
        partial void OnRECEIPTIDChanged();
        partial void OnSPGIDChanging(string value);
        partial void OnSPGIDChanged();
        partial void OnDISCOUNTChanging(double value);
        partial void OnDISCOUNTChanged();
        partial void OnTOTALChanging(double value);
        partial void OnTOTALChanged();
        partial void OnSTATUSChanging(int value);
        partial void OnSTATUSChanged();
        partial void OnPAYMENTTYPEChanging(int value);
        partial void OnPAYMENTTYPEChanged();
        partial void OnCASHChanging(double value);
        partial void OnCASHChanged();
        partial void OnEDCChanging(double value);
        partial void OnEDCChanged();
        partial void OnEDC2Changing(double value);
        partial void OnEDC2Changed();
        partial void OnCHANGEEChanging(double value);
        partial void OnCHANGEEChanged();
        partial void OnVOUCHERChanging(double value);
        partial void OnVOUCHERChanged();
        partial void OnBANKNAMEChanging(string value);
        partial void OnBANKNAMEChanged();
        partial void OnBANKNAME2Changing(string value);
        partial void OnBANKNAME2Changed();
        partial void OnNOREFChanging(string value);
        partial void OnNOREFChanged();
        partial void OnNOREF2Changing(string value);
        partial void OnNOREF2Changed();
        partial void OnDATEChanging(string value);
        partial void OnDATEChanged();
        partial void OnTIMEChanging(string value);
        partial void OnTIMEChanged();
        partial void OnTIMESTAMPChanging(System.DateTime value);
        partial void OnTIMESTAMPChanged();
        partial void OnSTATUSAPIChanging(int value);
        partial void OnSTATUSAPIChanged();
        partial void OnCUSTIDSTOREChanging(string value);
        partial void OnCUSTIDSTOREChanged();
        partial void OnCURRENCYChanging(string value);
        partial void OnCURRENCYChanged();
        partial void OnIDSHIFTChanging(string value);
        partial void OnIDSHIFTChanged();
        partial void OnIDCSTOREChanging(string value);
        partial void OnIDCSTOREChanged();
        partial void OnVOUCHERIDChanging(int value);
        partial void OnVOUCHERIDChanged();
        partial void OnVOUCHERCODEChanging(string value);
        partial void OnVOUCHERCODEChanged();
        #endregion

        public Transaction()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "BIGINT(40) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TRANSACTIONID in the schema.
        /// </summary>
        [Column(Name = @"TRANSACTION_ID", Storage = "_TRANSACTIONID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string TRANSACTIONID
        {
            get
            {
                return this._TRANSACTIONID;
            }
            set
            {
                if (this._TRANSACTIONID != value)
                {
                    this.OnTRANSACTIONIDChanging(value);
                    this.SendPropertyChanging("TRANSACTIONID");
                    this._TRANSACTIONID = value;
                    this.SendPropertyChanged("TRANSACTIONID");
                    this.OnTRANSACTIONIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STORECODE in the schema.
        /// </summary>
        [Column(Name = @"STORE_CODE", Storage = "_STORECODE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string STORECODE
        {
            get
            {
                return this._STORECODE;
            }
            set
            {
                if (this._STORECODE != value)
                {
                    this.OnSTORECODEChanging(value);
                    this.SendPropertyChanging("STORECODE");
                    this._STORECODE = value;
                    this.SendPropertyChanged("STORECODE");
                    this.OnSTORECODEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CUSTOMERID in the schema.
        /// </summary>
        [Column(Name = @"CUSTOMER_ID", Storage = "_CUSTOMERID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CUSTOMERID
        {
            get
            {
                return this._CUSTOMERID;
            }
            set
            {
                if (this._CUSTOMERID != value)
                {
                    this.OnCUSTOMERIDChanging(value);
                    this.SendPropertyChanging("CUSTOMERID");
                    this._CUSTOMERID = value;
                    this.SendPropertyChanged("CUSTOMERID");
                    this.OnCUSTOMERIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EMPLOYEEID in the schema.
        /// </summary>
        [Column(Name = @"EMPLOYEE_ID", Storage = "_EMPLOYEEID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string EMPLOYEEID
        {
            get
            {
                return this._EMPLOYEEID;
            }
            set
            {
                if (this._EMPLOYEEID != value)
                {
                    this.OnEMPLOYEEIDChanging(value);
                    this.SendPropertyChanging("EMPLOYEEID");
                    this._EMPLOYEEID = value;
                    this.SendPropertyChanged("EMPLOYEEID");
                    this.OnEMPLOYEEIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for RECEIPTID in the schema.
        /// </summary>
        [Column(Name = @"RECEIPT_ID", Storage = "_RECEIPTID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string RECEIPTID
        {
            get
            {
                return this._RECEIPTID;
            }
            set
            {
                if (this._RECEIPTID != value)
                {
                    this.OnRECEIPTIDChanging(value);
                    this.SendPropertyChanging("RECEIPTID");
                    this._RECEIPTID = value;
                    this.SendPropertyChanged("RECEIPTID");
                    this.OnRECEIPTIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SPGID in the schema.
        /// </summary>
        [Column(Name = @"SPG_ID", Storage = "_SPGID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string SPGID
        {
            get
            {
                return this._SPGID;
            }
            set
            {
                if (this._SPGID != value)
                {
                    this.OnSPGIDChanging(value);
                    this.SendPropertyChanging("SPGID");
                    this._SPGID = value;
                    this.SendPropertyChanged("SPGID");
                    this.OnSPGIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DISCOUNT in the schema.
        /// </summary>
        [Column(Storage = "_DISCOUNT", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double DISCOUNT
        {
            get
            {
                return this._DISCOUNT;
            }
            set
            {
                if (this._DISCOUNT != value)
                {
                    this.OnDISCOUNTChanging(value);
                    this.SendPropertyChanging("DISCOUNT");
                    this._DISCOUNT = value;
                    this.SendPropertyChanged("DISCOUNT");
                    this.OnDISCOUNTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TOTAL in the schema.
        /// </summary>
        [Column(Storage = "_TOTAL", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double TOTAL
        {
            get
            {
                return this._TOTAL;
            }
            set
            {
                if (this._TOTAL != value)
                {
                    this.OnTOTALChanging(value);
                    this.SendPropertyChanging("TOTAL");
                    this._TOTAL = value;
                    this.SendPropertyChanged("TOTAL");
                    this.OnTOTALChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STATUS in the schema.
        /// </summary>
        [Column(Storage = "_STATUS", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int STATUS
        {
            get
            {
                return this._STATUS;
            }
            set
            {
                if (this._STATUS != value)
                {
                    this.OnSTATUSChanging(value);
                    this.SendPropertyChanging("STATUS");
                    this._STATUS = value;
                    this.SendPropertyChanged("STATUS");
                    this.OnSTATUSChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PAYMENTTYPE in the schema.
        /// </summary>
        [Column(Name = @"PAYMENT_TYPE", Storage = "_PAYMENTTYPE", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int PAYMENTTYPE
        {
            get
            {
                return this._PAYMENTTYPE;
            }
            set
            {
                if (this._PAYMENTTYPE != value)
                {
                    this.OnPAYMENTTYPEChanging(value);
                    this.SendPropertyChanging("PAYMENTTYPE");
                    this._PAYMENTTYPE = value;
                    this.SendPropertyChanged("PAYMENTTYPE");
                    this.OnPAYMENTTYPEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CASH in the schema.
        /// </summary>
        [Column(Storage = "_CASH", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double CASH
        {
            get
            {
                return this._CASH;
            }
            set
            {
                if (this._CASH != value)
                {
                    this.OnCASHChanging(value);
                    this.SendPropertyChanging("CASH");
                    this._CASH = value;
                    this.SendPropertyChanged("CASH");
                    this.OnCASHChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EDC in the schema.
        /// </summary>
        [Column(Storage = "_EDC", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double EDC
        {
            get
            {
                return this._EDC;
            }
            set
            {
                if (this._EDC != value)
                {
                    this.OnEDCChanging(value);
                    this.SendPropertyChanging("EDC");
                    this._EDC = value;
                    this.SendPropertyChanged("EDC");
                    this.OnEDCChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EDC2 in the schema.
        /// </summary>
        [Column(Storage = "_EDC2", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double EDC2
        {
            get
            {
                return this._EDC2;
            }
            set
            {
                if (this._EDC2 != value)
                {
                    this.OnEDC2Changing(value);
                    this.SendPropertyChanging("EDC2");
                    this._EDC2 = value;
                    this.SendPropertyChanged("EDC2");
                    this.OnEDC2Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CHANGEE in the schema.
        /// </summary>
        [Column(Storage = "_CHANGEE", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double CHANGEE
        {
            get
            {
                return this._CHANGEE;
            }
            set
            {
                if (this._CHANGEE != value)
                {
                    this.OnCHANGEEChanging(value);
                    this.SendPropertyChanging("CHANGEE");
                    this._CHANGEE = value;
                    this.SendPropertyChanged("CHANGEE");
                    this.OnCHANGEEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VOUCHER in the schema.
        /// </summary>
        [Column(Storage = "_VOUCHER", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double VOUCHER
        {
            get
            {
                return this._VOUCHER;
            }
            set
            {
                if (this._VOUCHER != value)
                {
                    this.OnVOUCHERChanging(value);
                    this.SendPropertyChanging("VOUCHER");
                    this._VOUCHER = value;
                    this.SendPropertyChanged("VOUCHER");
                    this.OnVOUCHERChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for BANKNAME in the schema.
        /// </summary>
        [Column(Name = @"BANK_NAME", Storage = "_BANKNAME", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string BANKNAME
        {
            get
            {
                return this._BANKNAME;
            }
            set
            {
                if (this._BANKNAME != value)
                {
                    this.OnBANKNAMEChanging(value);
                    this.SendPropertyChanging("BANKNAME");
                    this._BANKNAME = value;
                    this.SendPropertyChanged("BANKNAME");
                    this.OnBANKNAMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for BANKNAME2 in the schema.
        /// </summary>
        [Column(Name = @"BANK_NAME2", Storage = "_BANKNAME2", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string BANKNAME2
        {
            get
            {
                return this._BANKNAME2;
            }
            set
            {
                if (this._BANKNAME2 != value)
                {
                    this.OnBANKNAME2Changing(value);
                    this.SendPropertyChanging("BANKNAME2");
                    this._BANKNAME2 = value;
                    this.SendPropertyChanged("BANKNAME2");
                    this.OnBANKNAME2Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOREF in the schema.
        /// </summary>
        [Column(Name = @"NO_REF", Storage = "_NOREF", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOREF
        {
            get
            {
                return this._NOREF;
            }
            set
            {
                if (this._NOREF != value)
                {
                    this.OnNOREFChanging(value);
                    this.SendPropertyChanging("NOREF");
                    this._NOREF = value;
                    this.SendPropertyChanged("NOREF");
                    this.OnNOREFChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOREF2 in the schema.
        /// </summary>
        [Column(Name = @"NO_REF2", Storage = "_NOREF2", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOREF2
        {
            get
            {
                return this._NOREF2;
            }
            set
            {
                if (this._NOREF2 != value)
                {
                    this.OnNOREF2Changing(value);
                    this.SendPropertyChanging("NOREF2");
                    this._NOREF2 = value;
                    this.SendPropertyChanged("NOREF2");
                    this.OnNOREF2Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DATE in the schema.
        /// </summary>
        [Column(Name = @"`DATE`", Storage = "_DATE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DATE
        {
            get
            {
                return this._DATE;
            }
            set
            {
                if (this._DATE != value)
                {
                    this.OnDATEChanging(value);
                    this.SendPropertyChanging("DATE");
                    this._DATE = value;
                    this.SendPropertyChanged("DATE");
                    this.OnDATEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TIME in the schema.
        /// </summary>
        [Column(Name = @"`TIME`", Storage = "_TIME", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string TIME
        {
            get
            {
                return this._TIME;
            }
            set
            {
                if (this._TIME != value)
                {
                    this.OnTIMEChanging(value);
                    this.SendPropertyChanging("TIME");
                    this._TIME = value;
                    this.SendPropertyChanged("TIME");
                    this.OnTIMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TIMESTAMP in the schema.
        /// </summary>
        [Column(Name = @"TIME_STAMP", Storage = "_TIMESTAMP", CanBeNull = false, DbType = "TIMESTAMP NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime TIMESTAMP
        {
            get
            {
                return this._TIMESTAMP;
            }
            set
            {
                if (this._TIMESTAMP != value)
                {
                    this.OnTIMESTAMPChanging(value);
                    this.SendPropertyChanging("TIMESTAMP");
                    this._TIMESTAMP = value;
                    this.SendPropertyChanged("TIMESTAMP");
                    this.OnTIMESTAMPChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STATUSAPI in the schema.
        /// </summary>
        [Column(Name = @"STATUS_API", Storage = "_STATUSAPI", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int STATUSAPI
        {
            get
            {
                return this._STATUSAPI;
            }
            set
            {
                if (this._STATUSAPI != value)
                {
                    this.OnSTATUSAPIChanging(value);
                    this.SendPropertyChanging("STATUSAPI");
                    this._STATUSAPI = value;
                    this.SendPropertyChanged("STATUSAPI");
                    this.OnSTATUSAPIChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CUSTIDSTORE in the schema.
        /// </summary>
        [Column(Name = @"CUST_ID_STORE", Storage = "_CUSTIDSTORE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CUSTIDSTORE
        {
            get
            {
                return this._CUSTIDSTORE;
            }
            set
            {
                if (this._CUSTIDSTORE != value)
                {
                    this.OnCUSTIDSTOREChanging(value);
                    this.SendPropertyChanging("CUSTIDSTORE");
                    this._CUSTIDSTORE = value;
                    this.SendPropertyChanged("CUSTIDSTORE");
                    this.OnCUSTIDSTOREChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CURRENCY in the schema.
        /// </summary>
        [Column(Storage = "_CURRENCY", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CURRENCY
        {
            get
            {
                return this._CURRENCY;
            }
            set
            {
                if (this._CURRENCY != value)
                {
                    this.OnCURRENCYChanging(value);
                    this.SendPropertyChanging("CURRENCY");
                    this._CURRENCY = value;
                    this.SendPropertyChanged("CURRENCY");
                    this.OnCURRENCYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for IDSHIFT in the schema.
        /// </summary>
        [Column(Name = @"ID_SHIFT", Storage = "_IDSHIFT", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string IDSHIFT
        {
            get
            {
                return this._IDSHIFT;
            }
            set
            {
                if (this._IDSHIFT != value)
                {
                    this.OnIDSHIFTChanging(value);
                    this.SendPropertyChanging("IDSHIFT");
                    this._IDSHIFT = value;
                    this.SendPropertyChanged("IDSHIFT");
                    this.OnIDSHIFTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for IDCSTORE in the schema.
        /// </summary>
        [Column(Name = @"ID_C_STORE", Storage = "_IDCSTORE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string IDCSTORE
        {
            get
            {
                return this._IDCSTORE;
            }
            set
            {
                if (this._IDCSTORE != value)
                {
                    this.OnIDCSTOREChanging(value);
                    this.SendPropertyChanging("IDCSTORE");
                    this._IDCSTORE = value;
                    this.SendPropertyChanged("IDCSTORE");
                    this.OnIDCSTOREChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VOUCHERID in the schema.
        /// </summary>
        [Column(Name = @"VOUCHER_ID", Storage = "_VOUCHERID", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int VOUCHERID
        {
            get
            {
                return this._VOUCHERID;
            }
            set
            {
                if (this._VOUCHERID != value)
                {
                    this.OnVOUCHERIDChanging(value);
                    this.SendPropertyChanging("VOUCHERID");
                    this._VOUCHERID = value;
                    this.SendPropertyChanged("VOUCHERID");
                    this.OnVOUCHERIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VOUCHERCODE in the schema.
        /// </summary>
        [Column(Name = @"VOUCHER_CODE", Storage = "_VOUCHERCODE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string VOUCHERCODE
        {
            get
            {
                return this._VOUCHERCODE;
            }
            set
            {
                if (this._VOUCHERCODE != value)
                {
                    this.OnVOUCHERCODEChanging(value);
                    this.SendPropertyChanging("VOUCHERCODE");
                    this._VOUCHERCODE = value;
                    this.SendPropertyChanged("VOUCHERCODE");
                    this.OnVOUCHERCODEChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.TransactionLine in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.transaction_line")]
    public partial class TransactionLine : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private long _Id;

        private string _TRANSACTIONID = @"-";

        private string _ARTICLEID = @"-";

        private int _QUANTITY = 0;

        private double _PRICE = 0;

        private double _DISCOUNT = 0;

        private double _SUBTOTAL = 0;

        private string _SPGID = @"-";

        private string _DISCOUNTCODE = @"-";

        private string _DISCOUNTTYPE = @"-";

        private string _DISCOUNTDESC = @"0";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnTRANSACTIONIDChanging(string value);
        partial void OnTRANSACTIONIDChanged();
        partial void OnARTICLEIDChanging(string value);
        partial void OnARTICLEIDChanged();
        partial void OnQUANTITYChanging(int value);
        partial void OnQUANTITYChanged();
        partial void OnPRICEChanging(double value);
        partial void OnPRICEChanged();
        partial void OnDISCOUNTChanging(double value);
        partial void OnDISCOUNTChanged();
        partial void OnSUBTOTALChanging(double value);
        partial void OnSUBTOTALChanged();
        partial void OnSPGIDChanging(string value);
        partial void OnSPGIDChanged();
        partial void OnDISCOUNTCODEChanging(string value);
        partial void OnDISCOUNTCODEChanged();
        partial void OnDISCOUNTTYPEChanging(string value);
        partial void OnDISCOUNTTYPEChanged();
        partial void OnDISCOUNTDESCChanging(string value);
        partial void OnDISCOUNTDESCChanged();
        #endregion

        public TransactionLine()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "BIGINT(40) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TRANSACTIONID in the schema.
        /// </summary>
        [Column(Name = @"TRANSACTION_ID", Storage = "_TRANSACTIONID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string TRANSACTIONID
        {
            get
            {
                return this._TRANSACTIONID;
            }
            set
            {
                if (this._TRANSACTIONID != value)
                {
                    this.OnTRANSACTIONIDChanging(value);
                    this.SendPropertyChanging("TRANSACTIONID");
                    this._TRANSACTIONID = value;
                    this.SendPropertyChanged("TRANSACTIONID");
                    this.OnTRANSACTIONIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ARTICLEID in the schema.
        /// </summary>
        [Column(Name = @"ARTICLE_ID", Storage = "_ARTICLEID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ARTICLEID
        {
            get
            {
                return this._ARTICLEID;
            }
            set
            {
                if (this._ARTICLEID != value)
                {
                    this.OnARTICLEIDChanging(value);
                    this.SendPropertyChanging("ARTICLEID");
                    this._ARTICLEID = value;
                    this.SendPropertyChanged("ARTICLEID");
                    this.OnARTICLEIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for QUANTITY in the schema.
        /// </summary>
        [Column(Storage = "_QUANTITY", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int QUANTITY
        {
            get
            {
                return this._QUANTITY;
            }
            set
            {
                if (this._QUANTITY != value)
                {
                    this.OnQUANTITYChanging(value);
                    this.SendPropertyChanging("QUANTITY");
                    this._QUANTITY = value;
                    this.SendPropertyChanged("QUANTITY");
                    this.OnQUANTITYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PRICE in the schema.
        /// </summary>
        [Column(Storage = "_PRICE", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double PRICE
        {
            get
            {
                return this._PRICE;
            }
            set
            {
                if (this._PRICE != value)
                {
                    this.OnPRICEChanging(value);
                    this.SendPropertyChanging("PRICE");
                    this._PRICE = value;
                    this.SendPropertyChanged("PRICE");
                    this.OnPRICEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DISCOUNT in the schema.
        /// </summary>
        [Column(Storage = "_DISCOUNT", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double DISCOUNT
        {
            get
            {
                return this._DISCOUNT;
            }
            set
            {
                if (this._DISCOUNT != value)
                {
                    this.OnDISCOUNTChanging(value);
                    this.SendPropertyChanging("DISCOUNT");
                    this._DISCOUNT = value;
                    this.SendPropertyChanged("DISCOUNT");
                    this.OnDISCOUNTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SUBTOTAL in the schema.
        /// </summary>
        [Column(Storage = "_SUBTOTAL", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double SUBTOTAL
        {
            get
            {
                return this._SUBTOTAL;
            }
            set
            {
                if (this._SUBTOTAL != value)
                {
                    this.OnSUBTOTALChanging(value);
                    this.SendPropertyChanging("SUBTOTAL");
                    this._SUBTOTAL = value;
                    this.SendPropertyChanged("SUBTOTAL");
                    this.OnSUBTOTALChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SPGID in the schema.
        /// </summary>
        [Column(Name = @"SPG_ID", Storage = "_SPGID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string SPGID
        {
            get
            {
                return this._SPGID;
            }
            set
            {
                if (this._SPGID != value)
                {
                    this.OnSPGIDChanging(value);
                    this.SendPropertyChanging("SPGID");
                    this._SPGID = value;
                    this.SendPropertyChanged("SPGID");
                    this.OnSPGIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DISCOUNTCODE in the schema.
        /// </summary>
        [Column(Name = @"DISCOUNT_CODE", Storage = "_DISCOUNTCODE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DISCOUNTCODE
        {
            get
            {
                return this._DISCOUNTCODE;
            }
            set
            {
                if (this._DISCOUNTCODE != value)
                {
                    this.OnDISCOUNTCODEChanging(value);
                    this.SendPropertyChanging("DISCOUNTCODE");
                    this._DISCOUNTCODE = value;
                    this.SendPropertyChanged("DISCOUNTCODE");
                    this.OnDISCOUNTCODEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DISCOUNTTYPE in the schema.
        /// </summary>
        [Column(Name = @"DISCOUNT_TYPE", Storage = "_DISCOUNTTYPE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DISCOUNTTYPE
        {
            get
            {
                return this._DISCOUNTTYPE;
            }
            set
            {
                if (this._DISCOUNTTYPE != value)
                {
                    this.OnDISCOUNTTYPEChanging(value);
                    this.SendPropertyChanging("DISCOUNTTYPE");
                    this._DISCOUNTTYPE = value;
                    this.SendPropertyChanged("DISCOUNTTYPE");
                    this.OnDISCOUNTTYPEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DISCOUNTDESC in the schema.
        /// </summary>
        [Column(Name = @"DISCOUNT_DESC", Storage = "_DISCOUNTDESC", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DISCOUNTDESC
        {
            get
            {
                return this._DISCOUNTDESC;
            }
            set
            {
                if (this._DISCOUNTDESC != value)
                {
                    this.OnDISCOUNTDESCChanging(value);
                    this.SendPropertyChanging("DISCOUNTDESC");
                    this._DISCOUNTDESC = value;
                    this.SendPropertyChanged("DISCOUNTDESC");
                    this.OnDISCOUNTDESCChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

}
